- name: Run simple commands
  preconditions:
    files:
      hitchreqs.txt: |
        argcomplete==1.7.0
        click==6.7
        colorama==0.3.7
        commandlib==0.2.5
        first==2.0.1
        hitchrun==0.1
        humanize==0.5.1
        Jinja2==2.9.5
        MarkupSafe==0.23
        path.py==10.1
        pip-tools==1.8.0
        six==1.10.0
      key.py: |
        import humanize
        import datetime
        from hitchrun import cwd, genpath, Path, expected
        keypath = Path(__file__).abspath()

        class ExpectedException(Exception):
            pass

        class UnexpectedException(Exception):
            pass

        def uncaught():
            """
            Command A help.
            """
            raise UnexpectedException("message")

        @expected(ExpectedException)
        def expected_exception():
            """
            Command B help.
            """
            raise ExpectedException("message")
  scenario:
    - hitchrun:
       args: uncaught
       expect: UnexpectedException
       exit_code: 1
    - hitchrun:
       args: expected_exception
       expect: ExpectedException
       exit_code: 1
